{"version":3,"sources":["components/pin/Pin.js","components/list/List.js","components/map/Map.js","App.js","index.js"],"names":["pinStyle","fill","stroke","Pin","this","props","size","height","viewBox","style","d","PureComponent","List","listItems","deleteMarker","clearMarkers","className","map","listItem","index","key","longitude","toFixed","latitude","onClick","length","Map","state","viewport","width","zoom","markers","TOKEN","oldMarkers","splice","setState","lngLat","newItem","prevState","marker","offsetLeft","offsetTop","mapStyle","mapboxApiAccessToken","onViewportChange","updateViewPort","addMarker","draggable","onDragEnd","mapEvent","updateMarker","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qSAMMA,G,MAAW,CACfC,KAAM,OACNC,OAAQ,SAGWC,E,iLACT,IAAD,EACeC,KAAKC,MAAnBC,YADD,MACQ,GADR,EAGP,OACE,yBAAKC,OAAQD,EAAME,QAAQ,YAAYC,MAAOT,GAC5C,0BAAMU,EAfJ,iR,GASuBC,iBCmBlBC,G,MA3BF,SAAAP,GAAU,IACbQ,EAA0CR,EAA1CQ,UAAWC,EAA+BT,EAA/BS,aAAcC,EAAiBV,EAAjBU,aAEjC,OACE,2BAAOC,UAAU,SACf,4CACA,6BAEA,wBAAIA,UAAU,gBACXH,EAAUI,IAAI,SAACC,EAAUC,GACxB,OACE,wBAAIH,UAAU,qBAAqBI,IAAKD,GAAxC,qBACcD,EAASG,UAAUC,QAAQ,GADzC,cACiDJ,EAASK,SAASD,QAAQ,IACzE,4BAAQE,QAAS,kBAAMV,EAAaK,IAAQH,UAAU,yBAAtD,oBAKLH,EAAUY,OACT,4BAAQD,QAAST,EAAcC,UAAU,uBAAzC,iBACE,SCjBSU,E,2MACnBC,MAAQ,CACNC,SAAU,CACRC,MAAO,KACPtB,OAAQ,KACRgB,SAAU,SACVF,UAAW,SACXS,KAAM,GAERC,QAAS,CACP,CACER,SAAU,UACVF,UAAW,WAEb,CACEE,SAAU,UACVF,UAAW,WAEb,CACEE,SAAU,UACVF,UAAW,a,EAKjBW,MACE,oG,EAiBFlB,aAAe,SAAAK,GACb,IAAMc,EAAU,YAAO,EAAKN,MAAMI,SAClCE,EAAWC,OAAOf,EAAO,GACzB,EAAKgB,SAAS,CAAEJ,QAASE,K,EAgB3BlB,aAAe,WACb,EAAKoB,SAAS,CAAEJ,QAAS,M,8EAnCZH,GACbxB,KAAK+B,SAAS,CAAEP,e,mCAG4B,IAAD,gBAAjCQ,OAAiC,GAAxBf,EAAwB,KACrCgB,EAAU,CACdd,SAFyC,KAGzCF,aAGFjB,KAAK+B,SAAS,SAAAG,GAAS,MAAK,CAC1BP,QAAQ,GAAD,mBAAMO,EAAUP,SAAhB,CAAyBM,S,mCAUvBE,EAAQpB,GACnB,IAAMkB,EAAU,CACdd,SAAUgB,EAAOH,OAAO,GACxBf,UAAWkB,EAAOH,OAAO,GACzBI,WAAY,EACZC,UAAW,GAGPR,EAAU,YAAO7B,KAAKuB,MAAMI,SAClCE,EAAWC,OAAOf,EAAO,EAAGkB,GAC5BjC,KAAK+B,SAAS,CAAEJ,QAASE,M,+BAOjB,IAAD,OACCF,EAAY3B,KAAKuB,MAAjBI,QACR,OACE,oCACG3B,KAAKuB,MAAMI,QAAQN,OAClB,kBAAC,EAAD,CACEZ,UAAWT,KAAKuB,MAAMI,QACtBjB,aAAcV,KAAKU,aACnBC,aAAcX,KAAKW,eAEnB,KAEJ,kBAAC,IAAD,eACE2B,SAAS,iCACT1B,UAAU,MACV2B,qBAAsBvC,KAAK4B,OACvB5B,KAAKuB,MAAMC,SAJjB,CAKEgB,iBAAkB,SAAAhB,GAAQ,OAAI,EAAKiB,eAAejB,IAClDJ,QAAS,SAAAI,GAAQ,OAAI,EAAKkB,UAAUlB,MAEnCG,EAAQd,IAAI,SAACsB,EAAQpB,GAAT,OACX,kBAAC,IAAD,CACEC,IAAKD,EACLI,SAAUgB,EAAOhB,SACjBF,UAAWkB,EAAOlB,UAClBmB,WAAYD,EAAOC,WACnBC,UAAWF,EAAOE,UAClBM,WAAS,EACTC,UAAW,SAAAC,GAAQ,OAAI,EAAKC,aAAaD,EAAU9B,KAEnD,kBAAC,EAAD,CAAKb,KAAM,KATb,UAUMiC,EAAOlB,UAAUC,QAAQ,GAV/B,cAUuCiB,EAAOhB,SAASD,QAAQ,a,GAjG1C6B,aCClBC,MAJf,WACE,OAAO,kBAAC,EAAD,OCCTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.733e1336.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst pinStyle = {\n  fill: \"#d00\",\n  stroke: \"none\"\n};\n\nexport default class Pin extends PureComponent {\n  render() {\n    const { size = 20 } = this.props;\n\n    return (\n      <svg height={size} viewBox=\"0 0 24 24\" style={pinStyle}>\n        <path d={ICON} />\n      </svg>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./list.css\";\n\nconst List = props => {\n  const { listItems, deleteMarker, clearMarkers } = props;\n\n  return (\n    <aside className=\"aside\">\n      <h3>Markers list</h3>\n      <hr />\n\n      <ul className=\"markers-list\">\n        {listItems.map((listItem, index) => {\n          return (\n            <li className=\"markers-list__item\" key={index}>\n              Marker: {`${listItem.longitude.toFixed(6)} / ${listItem.latitude.toFixed(6)}`}\n              <button onClick={() => deleteMarker(index)} className=\"button button--delete\">Delete marker</button>\n            </li>\n          );\n        })}\n\n        {listItems.length ? (\n          <button onClick={clearMarkers} className=\"button u-full-width\">Clear markers</button>\n        ) : null}\n      </ul>\n\n    </aside>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport \"./map.css\";\nimport Pin from \"../pin/Pin\";\nimport List from \"../list/List\";\n\nexport default class Map extends Component {\n  state = {\n    viewport: {\n      width: 1920,\n      height: 1080,\n      latitude: 49.01956,\n      longitude: 31.03717,\n      zoom: 5\n    },\n    markers: [\n      {\n        latitude: 51.237049,\n        longitude: 21.017532\n      },\n      {\n        latitude: 52.237249,\n        longitude: 22.017532\n      },\n      {\n        latitude: 53.237249,\n        longitude: 23.017532\n      }\n    ]\n  };\n\n  TOKEN =\n    \"pk.eyJ1IjoiZGltYXRrYWNoZW5rbyIsImEiOiJjanpjeXc1bGswMnloM2NscTQ3azg2OWY2In0.fp9hwpLq0hCnR-hf_clerg\";\n\n  updateViewPort(viewport) {\n    this.setState({ viewport });\n  }\n\n  addMarker({ lngLat: [longitude, latitude] }) {\n    const newItem = {\n      latitude,\n      longitude\n    };\n\n    this.setState(prevState => ({\n      markers: [...prevState.markers, newItem]\n    }));\n  }\n\n  deleteMarker = index => {\n    const oldMarkers = [...this.state.markers];\n    oldMarkers.splice(index, 1);\n    this.setState({ markers: oldMarkers });\n  };\n\n  updateMarker(marker, index) {\n    const newItem = {\n      latitude: marker.lngLat[1],\n      longitude: marker.lngLat[0],\n      offsetLeft: 0,\n      offsetTop: 0\n    };\n\n    const oldMarkers = [...this.state.markers];\n    oldMarkers.splice(index, 1, newItem);\n    this.setState({ markers: oldMarkers });\n  }\n\n  clearMarkers = () => {\n    this.setState({ markers: [] });\n  };\n\n  render() {\n    const { markers } = this.state;\n    return (\n      <>\n        {this.state.markers.length ? (\n          <List\n            listItems={this.state.markers}\n            deleteMarker={this.deleteMarker}\n            clearMarkers={this.clearMarkers}\n          />\n        ) : null}\n\n        <ReactMapGL\n          mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n          className=\"map\"\n          mapboxApiAccessToken={this.TOKEN}\n          {...this.state.viewport}\n          onViewportChange={viewport => this.updateViewPort(viewport)}\n          onClick={viewport => this.addMarker(viewport)}\n        >\n          {markers.map((marker, index) => (\n            <Marker\n              key={index}\n              latitude={marker.latitude}\n              longitude={marker.longitude}\n              offsetLeft={marker.offsetLeft}\n              offsetTop={marker.offsetTop}\n              draggable\n              onDragEnd={mapEvent => this.updateMarker(mapEvent, index)}\n            >\n              <Pin size={20} />\n              {`${marker.longitude.toFixed(6)} / ${marker.latitude.toFixed(6)}`}\n            </Marker>\n          ))}\n        </ReactMapGL>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Map from \"./components/map/Map\";\n\nfunction App() {\n  return <Map />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}